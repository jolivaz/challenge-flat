{"ast":null,"code":"var _jsxFileName = \"/Users/joseoliva/Documents/challenge/challenge-flat/src/component/pulls/pulls.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useContext, useState } from 'react';\nimport { RepositoriesContext } from '../../context/repositoriesContext';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { UsersContext } from '../../context/userContext';\nimport notAvailable from '../../assets/notfound.png';\nimport Pull from './pull/pull';\nimport axios from \"axios\";\nimport './pulls.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pulls = () => {\n  _s();\n\n  const [pullsList, setPullsList] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const {\n    repositoryActive\n  } = useContext(RepositoriesContext);\n  const {\n    user\n  } = useContext(UsersContext);\n  useEffect(() => {\n    const getPulls = async () => {\n      setLoader(true);\n      const dataPulls = await axios.get(`https://api.github.com/repos/${user.login}/${repositoryActive}/pulls`);\n\n      if (dataPulls) {\n        setTimeout(() => {\n          setPullsList(dataPulls.data);\n          setLoader(false);\n        }, 500);\n      } else {\n        console.warn('user does not exist');\n      }\n    };\n\n    getPulls();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pulls-component\",\n    children: loader ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Pull requests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pulls-component_list\",\n        children: pullsList.length > 0 ? pullsList.map(pull => /*#__PURE__*/_jsxDEV(Pull, {\n          pull: pull\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 33\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"not-available\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No hay Pulls disponibles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: notAvailable\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Pulls, \"C8euMQEOTLjf6AbNSDW1gmRX4jI=\");\n\n_c = Pulls;\nexport default Pulls;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pulls\");","map":{"version":3,"sources":["/Users/joseoliva/Documents/challenge/challenge-flat/src/component/pulls/pulls.js"],"names":["React","useEffect","useContext","useState","RepositoriesContext","CircularProgress","UsersContext","notAvailable","Pull","axios","Pulls","pullsList","setPullsList","loader","setLoader","repositoryActive","user","getPulls","dataPulls","get","login","setTimeout","data","console","warn","length","map","pull"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,mBAAT,QAAoC,mCAApC;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM;AAACY,IAAAA;AAAD,MAAqBb,UAAU,CAACE,mBAAD,CAArC;AACA,QAAM;AAACY,IAAAA;AAAD,MAASd,UAAU,CAACI,YAAD,CAAzB;AACAL,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMgB,QAAQ,GAAG,YAAW;AACxBH,MAAAA,SAAS,CAAC,IAAD,CAAT;AACA,YAAMI,SAAS,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAW,gCAA+BH,IAAI,CAACI,KAAM,IAAGL,gBAAiB,QAAzE,CAAxB;;AACA,UAAIG,SAAJ,EAAe;AACXG,QAAAA,UAAU,CAAC,MAAM;AACbT,UAAAA,YAAY,CAACM,SAAS,CAACI,IAAX,CAAZ;AACAR,UAAAA,SAAS,CAAC,KAAD,CAAT;AACH,SAHS,EAGR,GAHQ,CAAV;AAIH,OALD,MAKO;AACHS,QAAAA,OAAO,CAACC,IAAR,CAAa,qBAAb;AACH;AACJ,KAXD;;AAYAP,IAAAA,QAAQ;AACX,GAdQ,EAcN,EAdM,CAAT;AAeA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,cAEQJ,MAAM,gBACJ,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YADI,gBAGN;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,kBAEQF,SAAS,CAACc,MAAV,GAAmB,CAAnB,GACEd,SAAS,CAACe,GAAV,CAAcC,IAAI,iBAChB,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEA;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADF,CADF,gBAIE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADE,eAEF;AAAK,YAAA,GAAG,EAAEpB;AAAV;AAAA;AAAA;AAAA;AAAA,kBAFE;AAAA;AAAA;AAAA;AAAA;AAAA;AANV;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AALR;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CA5CD;;GAAMG,K;;KAAAA,K;AA8CN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useContext, useState } from 'react'\nimport { RepositoriesContext } from '../../context/repositoriesContext'\nimport CircularProgress from '@mui/material/CircularProgress'\nimport { UsersContext } from '../../context/userContext'\nimport notAvailable from '../../assets/notfound.png'\nimport Pull from './pull/pull'\nimport axios from \"axios\"\nimport './pulls.scss'\n\nconst Pulls = () => {\n    const [pullsList, setPullsList] = useState([])\n    const [loader, setLoader] = useState(false)\n    const {repositoryActive} = useContext(RepositoriesContext)\n    const {user} = useContext(UsersContext)\n    useEffect(() => {\n        const getPulls = async() => {\n            setLoader(true)\n            const dataPulls = await axios.get(`https://api.github.com/repos/${user.login}/${repositoryActive}/pulls`)\n            if (dataPulls) {\n                setTimeout(() => {\n                    setPullsList(dataPulls.data)\n                    setLoader(false)\n                },500)\n            } else {\n                console.warn('user does not exist')\n            } \n        }\n        getPulls()\n    }, [])\n    return(\n        <div className='pulls-component'>\n            {\n                loader\n                ? <CircularProgress />\n                :\n                <div>\n                    <h2>Pull requests</h2>\n                    <div className='pulls-component_list'>\n                        {\n                            pullsList.length > 0\n                            ? pullsList.map(pull => (\n                                <Pull pull={pull}/>\n                            ))\n                            : <div className='not-available'>\n                            <p>No hay Pulls disponibles</p>\n                            <img src={notAvailable} />\n                        </div>\n                        }\n                    </div>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default Pulls"]},"metadata":{},"sourceType":"module"}